{"version":3,"file":"static/js/246.191c4a2d.chunk.js","mappings":"2LAGe,SAASA,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,MAC/C,OAAOD,EAAWE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMF,MAAOA,EAAlC,SACGG,GAAQC,KAFJF,EADW,GAOvB,C,6HCXYI,EAAc,mCAAG,2FACtBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANsB,SAUfC,MACX,+DACAL,GACAM,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,IAf2B,mFAAH,qD,kBCMZ,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACRhB,IACGO,MAAK,SAAAC,GACJ,OAAOK,EAASL,EAASS,QAC1B,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,KAGD,4BACE,8CACA,yBACE,SAAC3B,EAAA,EAAD,CAAYC,WAAYmB,EAAOlB,MAAO,CAAE4B,KAAMR,SAIrD,C,sBC1BD,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOX,GAEP,YADAK,EAAOL,EAET,CAEIU,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOzB,KAAKoB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOT,GACdI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAST,EACnE,CAEAQ,OAAMe,EACR,GACF,CACF,C","sources":["components/MoviesList/MoviesList.jsx","api/getTrendMovies.js","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ moviesList, state }) {\n  return moviesList.map(({ id, name, title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={state}>\n        {name || title}\n      </Link>\n    </li>\n  ));\n}\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n\n  state: PropTypes.exact({ from: PropTypes.object.isRequired }).isRequired,\n};\n","export const getTrendMovies = async () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmY0OTNkZTM3N2Q0OWFlMjJiYjI0OGE1OTlhZTQzMyIsInN1YiI6IjY0OWM1NGFhOTYzODY0MDExZGE4ZmExNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AraQa6sw5Xc4jMFmOF5nTNm9FYUuccfqZCYZiwyPdHw',\n    },\n  };\n\n  return await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  ).then(response => {\n    return response.json();\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { getTrendMovies } from 'api/getTrendMovies';\nimport MoviesList from '../components/MoviesList';\n\nexport default function Home() {\n  const [query, setQuery] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendMovies()\n      .then(response => {\n        return setQuery(response.results);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending movies:</h1>\n      <ul>\n        <MoviesList moviesList={query} state={{ from: location }} />\n      </ul>\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","moviesList","state","map","id","name","title","to","getTrendMovies","options","method","headers","accept","Authorization","fetch","then","response","json","Home","useState","query","setQuery","location","useLocation","useEffect","results","catch","err","console","error","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}