{"version":3,"file":"static/js/938.c07ddf5d.chunk.js","mappings":"qPAAaA,EAAe,mCAAG,WAAMC,GAAN,8EACvBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANuB,SAUhBC,MAAM,sCAAD,OACsBN,EADtB,mBAEhBC,GACAM,MAAK,SAAAC,GACL,OAAOA,EAASC,MACjB,IAf4B,mFAAH,sD,SCKb,SAASC,IAAgB,IAAD,IAC7BV,GAAYW,EAAAA,EAAAA,MAAZX,QACFY,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAG3D,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,YAAa,GACbC,aAAc,GACdC,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,aAAc,IANhB,eAAOC,EAAP,KAAkBC,EAAlB,KAkCA,OAzBAC,EAAAA,EAAAA,YAAU,WACR5B,EAAgBC,GACbO,MAAK,SAAAC,GACJ,IACEW,EAMEX,EANFW,YADF,EAOIX,EALFY,aAAAA,OAFF,MAEiB,GAFjB,IAOIZ,EAJFa,MAAAA,OAHF,MAGU,UAHV,IAOIb,EAHFc,OAAAA,OAJF,MAIW,CAAC,CAAEM,KAAM,YAJpB,IAOIpB,EAFFe,SAAAA,OALF,MAKa,UALb,EAMEC,EACEhB,EADFgB,aAEFE,EAAa,CACXP,YAAaA,EACbC,aAAcA,EACdC,MAAOA,EACPC,OAAQA,EACRC,SAAUA,EACVC,aAAcA,GAEjB,IACAK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GAGb,GAAE,KAGD,iCACE,wBACE,SAAC,KAAD,CAAMG,GAAInB,EAAoBoB,QAA9B,6BAEF,gBACEC,IA1CkB,mCA0CKV,EAAUN,YACjCiB,IAAKX,EAAUJ,MACfgB,MAAO,OAET,wBACGZ,EAAUJ,MAAQ,KAAOI,EAAUL,aAAakB,MAAM,EAAG,GAAK,OAEjE,wCAAgBC,KAAKC,MAA+B,GAAzBf,EAAUD,eAAsB,GAA3D,QACA,sCACA,uBAAIC,EAAUF,YACd,oCACA,uBAAIE,EAAUH,OAAOmB,SAAQ,SAAAC,GAAI,OAAIA,EAAKd,IAAT,IAAee,KAAK,SAErD,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,sBC9ED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOvB,GAEP,YADAiB,EAAOjB,EAET,CAEIsB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOhD,KAAK2C,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOrB,GACdgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASrB,EACnE,CAEAoB,OAAMe,EACR,GACF,CACF,C","sources":["api/getMovieDetails.js","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getMovieDetails = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmY0OTNkZTM3N2Q0OWFlMjJiYjI0OGE1OTlhZTQzMyIsInN1YiI6IjY0OWM1NGFhOTYzODY0MDExZGE4ZmExNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AraQa6sw5Xc4jMFmOF5nTNm9FYUuccfqZCYZiwyPdHw',\n    },\n  };\n\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  ).then(response => {\n    return response.json();\n  });\n};\n","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from 'api/getMovieDetails';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  const [movieInfo, setMovieInfo] = useState({\n    poster_path: '',\n    release_date: '',\n    title: '',\n    genres: [],\n    overview: '',\n    vote_average: 0,\n  });\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(response => {\n        const {\n          poster_path,\n          release_date = '',\n          title = 'no info',\n          genres = [{ name: 'no info' }],\n          overview = 'no info',\n          vote_average,\n        } = response;\n        setMovieInfo({\n          poster_path: poster_path,\n          release_date: release_date,\n          title: title,\n          genres: genres,\n          overview: overview,\n          vote_average: vote_average,\n        });\n      })\n      .catch(err => console.error(err));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <p>\n        <Link to={backLinkLocationRef.current}>{`<<<< Go back`}</Link>\n      </p>\n      <img\n        src={BASE_POSTER_URL + movieInfo.poster_path}\n        alt={movieInfo.title}\n        width={200}\n      />\n      <h1>\n        {movieInfo.title + ' (' + movieInfo.release_date.slice(0, 4) + ')'}\n      </h1>\n      <p>User score: {Math.round(movieInfo.vote_average * 10) || ''}%</p>\n      <h2>Overview</h2>\n      <p>{movieInfo.overview}</p>\n      <h2>Genres</h2>\n      <p>{movieInfo.genres.flatMap(item => item.name).join(', ')}</p>\n\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovieDetails","movieId","options","method","headers","accept","Authorization","fetch","then","response","json","MovieDetails","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","poster_path","release_date","title","genres","overview","vote_average","movieInfo","setMovieInfo","useEffect","name","catch","err","console","error","to","current","src","alt","width","slice","Math","round","flatMap","item","join","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}